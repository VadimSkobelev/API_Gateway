version: "2"

services:
  news-db:
    container_name: news-db
    build: 
      context: ./NewsAggregator
      dockerfile: Dockerfile-db
    restart: always
    ports:
      - ":5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s

  comments-db:
    container_name: comments-db
    build:
      context: ./Comments
      dockerfile: Dockerfile-db
    restart: always
    ports:
      - ":5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 3s

  news:
    container_name: news
    build:
      context: ./NewsAggregator
      dockerfile: Dockerfile-news
    depends_on:
      news-db:
        condition: service_healthy
    restart: always
    ports:
      - "8081:8081"
    links:
      - news-db
    environment:
      - DB_HOST=news-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=news
      - API_PORT=8081

  comments:
    container_name: comments
    build:
      context: ./Comments
      dockerfile: Dockerfile-comments
    depends_on:
      comments-db:
        condition: service_healthy
    restart: always
    ports:
      - "8082:8082"
    links:
      - comments-db
    environment:
      - DB_HOST=comments-db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=comments
      - API_PORT=8082

  verification:
    container_name: verification
    build:
      context: ./Verification
      dockerfile: Dockerfile-verification
    restart: always
    ports:
      - "8083:8083"
    environment:
      - API_PORT=8083

  gw:
    container_name: api-gw
    build:
      context: ./API_gateway
      dockerfile: Dockerfile-gw
    restart: always
    ports:
      - "8080:8080"
    links:
      - news
      - comments
      - verification
    environment:
      - API_PORT=8080